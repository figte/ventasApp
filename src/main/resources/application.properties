#spring.datasource.url: ${JDBC_DATABASE_URL:}
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10

spring.thymeleaf.mode=HTML

logging.level.org.springframework=INFO

spring.profiles.active=production

server.port=${PORT:8080}


#Crear la base de datos antes sino no funciona
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://ec2-50-17-178-87.compute-1.amazonaws.com:5432/d26k1jeo4cecgg
spring.datasource.username=zyupyrfkfiluyq
spring.datasource.password=71116a6f30550836e3e88f58359afa52c5dc1e5bcab0afc1a96c865ce534799e
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql = true
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create
#logging.level.org.hibernate.SQL=debug

#spring security
#spring.thymeleaf.cache= false
spring.thymeleaf.encoding=UTF-8

